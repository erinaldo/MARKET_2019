USE [MARKET_CELESTE]
GO
/****** Object:  StoredProcedure [dbo].[VENTA_AGREGAR_DETALLE]    Script Date: 05/04/2019 11:40:19 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
ALTER PROCEDURE [dbo].[VENTA_AGREGAR_DETALLE]
@CORR FLOAT,
@COD_ART char(15),
@CANT FLOAT,
--@PU FLOAT,
@NROPTOVTA VARCHAR(30),@TIPO CHAR(1),
@SW INT OUTPUT

 AS

 BEGIN TRAN	
	SET @SW=0
	DECLARE @COD_ALMACEN BIGINT
	DECLARE @CUR_COD_ARTC CHAR(15)	DECLARE @CUR_CANT_COMBO FLOAT
	DECLARE @STOCK FLOAT
	DECLARE @PU FLOAT
	
	DECLARE @CANT_ANT FLOAT
	SELECT @CANT_ANT=SUM(CANT_TMP) FROM DETALLETMP WHERE CORR_TMP=@CORR AND COD_ART=@COD_ART
	SET @CANT_ANT=ISNULL(@CANT_ANT,0)
	
	--AVERIGUAMOS EL ALMACEN
	SELECT @COD_ALMACEN=COD_ALMACEN FROM PTOVTA WHERE APTOTERM=@NROPTOVTA AND APTOSTAT=0
	SET @COD_ALMACEN=ISNULL(@COD_ALMACEN,0)
	
	--AVERIGUAMOS PU
	SELECT TOP 1 @PU=PREBASE FROM ART_PRECIO WHERE COD_ART=@COD_ART AND STAT_AP=0
	SET @PU=ISNULL(@PU,0)
	IF @PU=0 
		BEGIN
			SET @SW=3
			RETURN
		END
	
	--AVERIGUAMOS SI HAY STOCK
	--AVERIGUAMOS SI ES COMBO	IF (SELECT COUNT(COD_ART) FROM ARTICULOS WHERE COD_ART=@COD_ART AND COMBO_ART=1)>0
		BEGIN			Declare CUR Cursor For 			SELECT COD_ARTC,CANT_COMBO FROM COMBOS WHERE COD_ART=@COD_ART			OPEN CUR			FETCH NEXT FROM CUR INTO @CUR_COD_ARTC,@CUR_CANT_COMBO			WHILE @@FETCH_STATUS =0				BEGIN					SELECT @STOCK=SUM(CASE WHEN TIPO_MOV='Ingreso' then CANT_KARDEX ELSE -1*CANT_KARDEX END)   					FROM KARDEX WHERE CODIGO=@CUR_COD_ARTC AND COD_ALMACEN=@COD_ALMACEN					IF ISNULL(@STOCK,0)<(@CUR_CANT_COMBO*@CANT)+@CANT_ANT						BEGIN							--SET @STOCK=-9999							SET @SW=2							--GOTO IR							CLOSE CUR							DEALLOCATE CUR										ROLLBACK TRAN							RETURN						END					FETCH NEXT FROM CUR INTO @CUR_COD_ARTC,@CUR_CANT_COMBO
				END			IR:			CLOSE CUR			DEALLOCATE CUR		END
	ELSE
		BEGIN			SELECT @STOCK=SUM(CASE WHEN TIPO_MOV='Ingreso' then CANT_KARDEX ELSE -1*CANT_KARDEX END)   			FROM KARDEX WHERE CODIGO=@COD_ART AND COD_ALMACEN=@COD_ALMACEN			IF ISNULL(@STOCK,0)<@CANT+@CANT_ANT				BEGIN					SET @SW=2					--GOTO IR					ROLLBACK TRAN					RETURN				END		END	--
	
	--
	IF (SELECT COUNT(COD_ART) FROM DETALLETMP WHERE CORR_TMP=@CORR AND COD_ART=@COD_ART)>0
		BEGIN          IF @TIPO='N'
            BEGIN
               UPDATE DETALLETMP SET CANT_TMP=@CANT WHERE CORR_TMP=@CORR AND COD_ART=@COD_ART
            END
          ELSE
            BEGIN
			 UPDATE DETALLETMP SET CANT_TMP=CANT_TMP+@CANT WHERE CORR_TMP=@CORR AND COD_ART=@COD_ART            END
		END
	ELSE
		BEGIN
			INSERT INTO DETALLETMP(CORR_TMP,COD_ART,CANT_TMP,PU_TMP) VALUES(@CORR,@COD_ART,@CANT,@PU)
		END

	 IF (@@ERROR!=0)
	    BEGIN
		--RAISERROR 2000 'error actualizando datos'
		ROLLBACK TRAN
		SET @SW=1
	        RETURN(1)
	    END
	
    COMMIT TRAN   	