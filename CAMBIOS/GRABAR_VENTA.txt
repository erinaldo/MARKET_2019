USE [SAN_DIEGO]
GO
/****** Object:  StoredProcedure [dbo].[GRABAR_VENTA]    Script Date: 09/19/2019 15:44:45 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[GRABAR_VENTA]



@COD_DOC	char(3),
@NRODOCU	numeric,
@MON_VENTA	char(1),
@CAMBIO_VENTA	numeric(9,2),
@CDTIPOPAGO	char(2),
@FECHA_VENTA	SMALLDATETIME,
@FECPROCESO	smalldatetime,
@TOTAL_VENTA	numeric(9,2),
@SUBTOT_VENTA	numeric(9,2),
@IGV_VENTA	numeric(9,2),
@VUELTO_VENTA	numeric(9,2),
@PAGOS_VENTA	numeric(9,2),
@PAGOD_VENTA	numeric(9,2),
@COD_CLIENTE	char(20),
@CIERREX	bit,
@CIERREZ	bit,
@COD_USER	varchar(10),
@NROPTOVTA	VARchar(30),
@TURNO	int,
@CORR FLOAT,
--TARJETA
@COD_TARJETA CHAR(2),
@MON_TARJETA CHAR(1),
@NRO_TARJETA CHAR(20),
@MONTO_TARJETA NUMERIC(9,4),
--
@DSCTO_VENTA NUMERIC(12,4)=0,
@GRATUITA_VENTA BIT =0,
@MONTO_GRATUITA_VENTA numeric(12,4)=0,
@SW INT OUTPUT

AS



BEGIN TRAN



DECLARE @VAL_IGV INT

DECLARE @COD_ALMACEN BIGINT



--AVERIGUAMOS IGV

SELECT @VAL_IGV=IGV FROM CONFIG

SET @VAL_IGV=ISNULL(@VAL_IGV,0)



--AVERIGUAMOS EL ALMACEN

SELECT @COD_ALMACEN=COD_ALMACEN FROM PTOVTA WHERE APTOTERM=@NROPTOVTA AND APTOSTAT=0

SET @COD_ALMACEN=ISNULL(@COD_ALMACEN,0)



--SI ES FACTURA VERIFICAMOS QUE TENGA RUC

IF @COD_DOC='001'

	BEGIN

		IF (SELECT COUNT(COD_CLIENTE) FROM CLIENTES WHERE RTRIM(RUC_CLIENTE)='' AND COD_CLIENTE=@COD_CLIENTE)>0

			BEGIN

				SET @SW=4

			END

	END



SET @SW=0

--VERIFICAMOS QUE NO SE HAYA HECHO CIERRE DE ESTA FECHA DE PROCESO

--IF (SELECT COUNT(NROZETA) FROM OP_ZETA WHERE FECHA_PROCESO=@FECPROCESO)>0 

	--BEGIN

		--SET @SW=2

--		ROLLBACK TRAN

	--	RETURN

--	END





--VERIFICAR QUE NO EXISTA EL NRO DE DOCUMENTO

IF (SELECT COUNT(NRODOCU) FROM VENTACAB WHERE COD_DOC=@COD_DOC AND NRODOCU=@NRODOCU)>0 

	BEGIN

		SET @SW=3

		ROLLBACK TRAN

		RETURN

	END



--GRABAMOS CABECERA

INSERT INTO VENTACAB(COD_DOC,NRODOCU,MON_VENTA,CAMBIO_VENTA,CDTIPOPAGO,STAT_VENTA,FECHA_VENTA,FECPROCESO,TOTAL_VENTA,

	SUBTOT_VENTA,IGV_VENTA,VUELTO_VENTA,PAGOS_VENTA,PAGOD_VENTA,COD_CLIENTE,CIERREX,CIERREZ,COD_USER,NROPTOVTA,

	TURNO,FECHA_REG,VAL_IGV,DSCTO_VENTA,COD_ALMACEN,GRATUITA_VENTA,MONTO_GRATUITO_VENTA)

VALUES

	(@COD_DOC,@NRODOCU,@MON_VENTA,@CAMBIO_VENTA,@CDTIPOPAGO,0,@FECHA_VENTA,@FECPROCESO,@TOTAL_VENTA,

	@SUBTOT_VENTA,@IGV_VENTA,@VUELTO_VENTA,@PAGOS_VENTA,@PAGOD_VENTA,@COD_CLIENTE,@CIERREX,@CIERREZ,@COD_USER,@NROPTOVTA,

	@TURNO,GETDATE(),@VAL_IGV,@DSCTO_VENTA,@COD_ALMACEN,@GRATUITA_VENTA,@MONTO_GRATUITA_VENTA)



	IF @@ERROR!=0

		BEGIN

			SET @SW=1

			ROLLBACK TRAN

			RETURN

		END



--GRABAMOS EL PAGO CON TARJETA DESDE EFECTIVO

IF @CDTIPOPAGO='M' OR @CDTIPOPAGO='ET' 

	BEGIN

		INSERT INTO VENTATARJ(COD_DOC,NRODOCU,ITEM,COD_TARJETA,MON_TARJETA,NRO_TARJETA,MONTO_TARJETA)

		SELECT @COD_DOC,@NRODOCU,ID_TEMP,COD_TARJETA,MON_TARJETA,NRO_TARJETA,MONTO_TARJETA FROM TMP_PAGO_TARJETA WHERE CORR=@CORR

		IF @@ERROR!=0

			BEGIN

				SET @SW=1

				ROLLBACK TRAN

				RETURN

			END

	END



--GRABAMOS EL PAGO CON TARJETA 

IF @CDTIPOPAGO='T' 

	BEGIN

		INSERT INTO VENTATARJ(COD_DOC,NRODOCU,ITEM,COD_TARJETA,MON_TARJETA,NRO_TARJETA,MONTO_TARJETA) 

		VALUES(@COD_DOC,@NRODOCU,1,@COD_TARJETA,@MON_TARJETA,@NRO_TARJETA,@MONTO_TARJETA)

		IF @@ERROR!=0

			BEGIN

				SET @SW=1

				ROLLBACK TRAN

				RETURN

			END

	END



--GRABAMOS EL PAGO AL CREDITO

IF @CDTIPOPAGO='C' 

	BEGIN

		INSERT INTO VENTACRED(COD_DOC,NRODOCU,COD_CLIENTE,MON_CRED,TOTAL_CRED,FECPROCESO,PAGO_CRED) 

		VALUES(@COD_DOC,@NRODOCU,@COD_CLIENTE,@MON_VENTA,@TOTAL_VENTA,@FECPROCESO,0)

		IF @@ERROR!=0

			BEGIN

				SET @SW=1

				ROLLBACK TRAN

				RETURN

			END

	END



--GRABAMOS EL DETALLE

INSERT INTO VENTADET(COD_DOC,NRODOCU,ITEM,COD_ART,CANTIDAD,PRECIO,DSCTO_PORC,DSCTO_MONTO)

SELECT @COD_DOC,@NRODOCU,ID_TMP,COD_ART,CANT_TMP,PU_TMP,DSCTO_PORC,DSCTO_MONTO FROM DETALLETMP WHERE CORR_TMP=@CORR

	IF @@ERROR!=0

		BEGIN

			SET @SW=1

			ROLLBACK TRAN

			RETURN

		END

--ACTUALIZAMOS CORRELATIVO

UPDATE PTOVTAD  SET  APTONDOC=@NRODOCU+1 WHERE COD_DOC=@COD_DOC  AND APTOCODI=(SELECT APTOCODI FROM PTOVTA WHERE APTOTERM=@NROPTOVTA)

	IF @@ERROR!=0

		BEGIN

			SET @SW=1

			ROLLBACK TRAN

			RETURN

		END

 

--AGREGANDO AL KARDEX

DECLARE @COD_ART VARCHAR(30),

	    @CANT FLOAT,

	    @PU FLOAT,

	    @ID VARCHAR(25),

	    @COD_ARTC VARCHAR(30),

	    @CANT_COMBO FLOAT,

	    @CANT_T FLOAT

SET @ID=@COD_DOC+'-'+CONVERT(VARCHAR,@NRODOCU)

DECLARE CUR CURSOR FOR

	--SELECT COD_ART,CANT_TMP,PU_TMP FROM DETALLETMP WHERE CORR_TMP=@CORR

	SELECT DETALLETMP.COD_ART,DETALLETMP.CANT_TMP,DETALLETMP.PU_TMP, 

	ISNULL(Combos.COD_ARTC,'') AS COD_ARTC, ISNULL(Combos.CANT_COMBO,0) AS CANT_COMBO

	FROM DETALLETMP LEFT OUTER JOIN Combos ON DETALLETMP.COD_ART = Combos.COD_ART

	WHERE (DETALLETMP.CORR_TMP =@CORR)



OPEN CUR

FETCH NEXT FROM CUR INTO @COD_ART,@CANT,@PU,@COD_ARTC,@CANT_COMBO

WHILE @@FETCH_STATUS =0

	BEGIN

		IF @CANT_COMBO=0

			BEGIN

				EXEC AGREGAR_KARDEX @COD_ART,@CANT,@FECHA_VENTA,'Venta',@ID,'Salida','',@MON_VENTA,@PU,@COD_USER,@CAMBIO_VENTA,@COD_ALMACEN

			END

		ELSE

			BEGIN

				SET @CANT_T=@CANT*@CANT_COMBO 

				EXEC AGREGAR_KARDEX @COD_ARTC,@CANT_T,@FECHA_VENTA,'Venta',@ID,'Salida','',@MON_VENTA,@PU,@COD_USER,@CAMBIO_VENTA,@COD_ALMACEN

			END

		FETCH NEXT FROM CUR INTO @COD_ART,@CANT,@PU,@COD_ARTC,@CANT_COMBO

	END

CLOSE CUR

DEALLOCATE CUR









IF @@ERROR!=0

	BEGIN

		SET @SW=1

		ROLLBACK TRAN

		RETURN

	END





COMMIT TRAN

RETURN